name: Test and Coverage
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-latest]
        python-version: ['3.12']
        group: [1, 2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up environment
        run: |
          mkdir -p ~/.local/bin
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
      - name: Install OpenMP (macOS only)
        if: runner.os == 'macOS'
        run: brew install libomp
      - name: Download and extract plink2
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-24.04" ]]; then
            curl -LJO https://s3.amazonaws.com/plink2-assets/alpha6/plink2_linux_avx2_20241111.zip
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            curl -LJO https://s3.amazonaws.com/plink2-assets/alpha6/plink2_mac_arm64_20241111.zip
          fi
          unzip -o plink2_*.zip
          rm plink2_*.zip
          chmod +x plink2
          ./plink2 --version
          mv plink2 ~/.local/bin
          plink2 --version
      - name: Download and extract plink1
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-24.04" ]]; then
            curl -LJO https://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20241022.zip
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            curl -LJO https://s3.amazonaws.com/plink1-assets/plink_mac_20241022.zip
          fi
          unzip -o plink_*.zip
          rm plink_*.zip
          chmod +x plink
          ./plink --version
          mv plink ~/.local/bin
          plink --version
      - name: Run tests with Python ${{ matrix.python-version }} on ${{ matrix.os }}
        env:
          PYTEST_GROUP: ${{ matrix.group }}
        run: |
          pip install tox==4.17.1
          pip install poetry==1.8.3
          tox -e py_partial
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-24.04'
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}